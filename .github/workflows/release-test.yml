# GitHub Actions
# https://help.github.com/en/articles/configuring-a-workflow
name: Release tests

on: push

jobs:
    test1:
        name: Release tests
        runs-on: ubuntu-18.04
        steps:
            - uses: actions/checkout@master

            # install a specific version of Node using
            # https://github.com/actions/setup-node
            - name: Use Node.js v14
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            # just so we learn about available environment variables GitHub provides
            - name: Print env variables
              run: |
                  npm i -g @bahmutov/print-env
                  print-env GITHUB

            # Restore the previous NPM modules and Cypress binary archives.
            # Any updated archives will be saved automatically after the entire
            # workflow successfully finishes.
            # See https://github.com/actions/cache
            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Cache Cypress binary
              uses: actions/cache@v1
              with:
                  path: ~/.cache/Cypress
                  key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      cypress-${{ runner.os }}-cypress-

            # Runs Cypress tests using the parallel spec runner
            - name: Release tests
              run: npm run release-test
              env:
                  TERM: xterm
              timeout-minutes: 10

            # https://github.com/actions/upload-artifact
            - name: Upload test-reports
              if: always()
              uses: actions/upload-artifact@master
              with:
                  name: test-reports
                  path: test-reports

            - name: Upload mochawesome report
              if: always()
              uses: actions/upload-artifact@master
              with:
                  name: mochawesome
                  path: test-reports/mochawesome.html
